# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Use Python 3.x'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/usr/bin/env bash
      
      # Install AVD files
      echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'cmdline-tools;latest'
      echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'platform-tools'
      echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'emulator'
      echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
            
      # Create emulator
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n xamarin_android_emulator -k 'system-images;android-27;google_apis;x86' --force
      
      $ANDROID_HOME/emulator/emulator -list-avds
      
      echo "Starting emulator"
      
      # Start emulator in background
      nohup $ANDROID_HOME/emulator/emulator -avd xamarin_android_emulator -no-snapshot > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      
      $ANDROID_HOME/platform-tools/adb devices
      
      echo "Emulator started"
  displayName: 'Start Android Emulator'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Install APK
      $ANDROID_HOME/platform-tools/adb install WikipediaSample.apk
      
      # Extract package name from APK
      PACKAGE_NAME=$($ANDROID_HOME/build-tools/30.0.3/aapt dump badging WikipediaSample.apk | grep package:\ name | awk -F"'" '{print $2}')
      echo "Package Name: $PACKAGE_NAME"

      # Launch APK
      $ANDROID_HOME/platform-tools/adb shell monkey -p $PACKAGE_NAME -c android.intent.category.LAUNCHER 1
  displayName: 'Install and Launch APK'
  
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Take a screenshot
      $ANDROID_HOME/platform-tools/adb exec-out screencap -p > $(Build.ArtifactStagingDirectory)/screenshot.png
  displayName: 'Take Screenshot'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/screenshot.png'
    artifactName: 'screenshot'
  displayName: 'Publish Screenshot'

- script: |
    echo Done
  displayName: 'Run a multi-line script'
